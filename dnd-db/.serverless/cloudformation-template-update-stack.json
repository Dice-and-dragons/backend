{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "DbVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "InstanceTenancy": "default"
      }
    },
    "DBSecurityGroup": {
      "DependsOn": [
        "DbVPC"
      ],
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "DbVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 5432,
            "ToPort": 5432,
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "GroupDescription": "Allow DB to accept all requests via 5432 port"
      }
    },
    "DbSubnetA": {
      "DependsOn": [
        "DbVPC"
      ],
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "DbVPC"
        },
        "AvailabilityZone": "eu-central-1a",
        "CidrBlock": "10.0.0.0/24"
      }
    },
    "DbSubnetB": {
      "DependsOn": [
        "DbVPC"
      ],
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "DbVPC"
        },
        "AvailabilityZone": "eu-central-1b",
        "CidrBlock": "10.0.1.0/24"
      }
    },
    "DbSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "RDS Subnet Group",
        "SubnetIds": [
          {
            "Ref": "DbSubnetA"
          },
          {
            "Ref": "DbSubnetB"
          }
        ]
      }
    },
    "DbInternetGateway": {
      "Type": "AWS::EC2::InternetGateway"
    },
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "DbVPC"
        },
        "InternetGatewayId": {
          "Ref": "DbInternetGateway"
        }
      }
    },
    "RouteTablePublic": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "DbVPC"
        }
      }
    },
    "RoutePublic": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "DbInternetGateway"
        },
        "RouteTableId": {
          "Ref": "RouteTablePublic"
        }
      }
    },
    "RouteTableAssociationSubnetA": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteTablePublic"
        },
        "SubnetId": {
          "Ref": "DbSubnetA"
        }
      }
    },
    "RouteTableAssociationSubnetB": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteTablePublic"
        },
        "SubnetId": {
          "Ref": "DbSubnetB"
        }
      }
    },
    "DBInstance": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": 20,
        "DBInstanceClass": "db.t4g.small",
        "Engine": "postgres",
        "DBName": "dev_dnd_db_stack",
        "MasterUsername": "dnddb",
        "ManageMasterUserPassword": true,
        "PubliclyAccessible": true,
        "StorageType": "gp2",
        "VPCSecurityGroups": [
          {
            "Fn::GetAtt": [
              "DBSecurityGroup",
              "GroupId"
            ]
          }
        ],
        "DBSubnetGroupName": {
          "Ref": "DbSubnetGroup"
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-dnd-db-stack-dev-ServerlessDeploymentBucketName"
      }
    },
    "dbDetails": {
      "Value": {
        "Fn::Sub": [
          "{\"username\": \"dnddb\", \"port\": \"${DBInstance.Endpoint.Port}\", \"password_secret\": \"${DBInstance.MasterUserSecret.SecretArn}\", \"db_name\": \"dev_dnd_db_stack\", \"host\": \"${DBInstance.Endpoint.Address}\"}",
          {
            "Db_Name": "dev_dnd_db_stack",
            "username": "dnddb"
          }
        ]
      },
      "Export": {
        "Name": "dnd-db-stack-dev-dbCredentials"
      }
    }
  }
}